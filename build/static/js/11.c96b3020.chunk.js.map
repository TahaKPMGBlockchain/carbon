{"version":3,"sources":["reusable/DocsLink.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","views/base/forms/BasicForms.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","from","test","BasicForms","useState","xs","md","action","method","encType","row","htmlFor","id","placeholder","col","multiple","custom","variant","type","size","color"],"mappings":"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","file":"static/js/11.c96b3020.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFade,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CValidFeedback,\n  CInvalidFeedback,\n  CTextarea,\n  CInput,\n  CInputFile,\n  CInputCheckbox,\n  CInputRadio,\n  CInputGroup,\n  CInputGroupAppend,\n  CInputGroupPrepend,\n  CDropdown,\n  CInputGroupText,\n  CLabel,\n  CSelect,\n  CRow,\n  CSwitch\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\n\nconst BasicForms = () => {\n  const [collapsed, setCollapsed] = React.useState(true)\n  const [showElements, setShowElements] = React.useState(true)\n\n  return (\n    <>\n\n      <CRow>\n        <CCol xs=\"12\" md=\"12\">\n          <CCard>\n            <CCardHeader>\n              Data Input\n              <small> Source</small>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"text-input\">IOT device</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Addresss\" />\n                    <CFormText>Enter IP address of IOT device </CFormText>\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CLabel col md=\"3\" htmlFor=\"file-input\">File input</CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile id=\"file-input\" name=\"file-input\" />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel>Multiple File input</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile\n                      id=\"file-multiple-input\"\n                      name=\"file-multiple-input\"\n                      multiple\n                      custom\n                    />\n                    <CLabel htmlFor=\"file-multiple-input\" variant=\"custom-file\">\n                      Choose Files...\n                    </CLabel>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col md={3}>Custom file input</CLabel>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInputFile custom id=\"custom-file-input\" />\n                    <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\n                      Choose file...\n                    </CLabel>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\n            </CCardFooter>\n          </CCard>\n\n        </CCol>\n\n      </CRow>\n\n\n    </>\n  )\n}\n\nexport default BasicForms\n"],"sourceRoot":""}